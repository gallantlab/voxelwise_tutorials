Traceback (most recent call last):
  File "/home/jlg/mvdoc/miniconda3/envs/voxelwise_tutorials/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/jlg/mvdoc/miniconda3/envs/voxelwise_tutorials/lib/python3.10/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/jlg/mvdoc/miniconda3/envs/voxelwise_tutorials/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
  File "/home/jlg/mvdoc/miniconda3/envs/voxelwise_tutorials/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/jlg/mvdoc/miniconda3/envs/voxelwise_tutorials/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/jlg/mvdoc/miniconda3/envs/voxelwise_tutorials/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/jlg/mvdoc/miniconda3/envs/voxelwise_tutorials/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
file_name = os.path.join(directory, "features", "motion_energy.hdf")
X_train = load_hdf5_array(file_name, key='X_train')
X_test = load_hdf5_array(file_name, key='X_test')

# We use single precision float to speed up model fitting on GPU.
X_train = X_train.astype("float32")
X_test = X_test.astype("float32")
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
Cell [0;32mIn[4], line 2[0m
[1;32m      1[0m file_name [38;5;241m=[39m os[38;5;241m.[39mpath[38;5;241m.[39mjoin(directory, [38;5;124m"[39m[38;5;124mfeatures[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mmotion_energy.hdf[39m[38;5;124m"[39m)
[0;32m----> 2[0m X_train [38;5;241m=[39m [43mload_hdf5_array[49m[43m([49m[43mfile_name[49m[43m,[49m[43m [49m[43mkey[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mX_train[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m      3[0m X_test [38;5;241m=[39m load_hdf5_array(file_name, key[38;5;241m=[39m[38;5;124m'[39m[38;5;124mX_test[39m[38;5;124m'[39m)
[1;32m      5[0m [38;5;66;03m# We use single precision float to speed up model fitting on GPU.[39;00m

File [0;32m~/repos/voxelwise_tutorials/voxelwise_tutorials/io.py:157[0m, in [0;36mload_hdf5_array[0;34m(file_name, key, slice)[0m
[1;32m    139[0m [38;5;28;01mdef[39;00m [38;5;21mload_hdf5_array[39m(file_name, key[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;28mslice[39m[38;5;241m=[39m[38;5;28mslice[39m([38;5;241m0[39m, [38;5;28;01mNone[39;00m)):
[1;32m    140[0m [38;5;250m    [39m[38;5;124;03m"""Function to load data from an hdf file.[39;00m
[1;32m    141[0m 
[1;32m    142[0m [38;5;124;03m    Parameters[39;00m
[0;32m   (...)[0m
[1;32m    155[0m [38;5;124;03m        Array, or dictionary of arrays (if `key` is None).[39;00m
[1;32m    156[0m [38;5;124;03m    """[39;00m
[0;32m--> 157[0m     [38;5;28;01mwith[39;00m [43mh5py[49m[38;5;241;43m.[39;49m[43mFile[49m[43m([49m[43mfile_name[49m[43m,[49m[43m [49m[43mmode[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mr[39;49m[38;5;124;43m'[39;49m[43m)[49m [38;5;28;01mas[39;00m hf:
[1;32m    158[0m         [38;5;28;01mif[39;00m key [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    159[0m             data [38;5;241m=[39m [38;5;28mdict[39m()

File [0;32m~/miniconda3/envs/voxelwise_tutorials/lib/python3.10/site-packages/h5py/_hl/files.py:562[0m, in [0;36mFile.__init__[0;34m(self, name, mode, driver, libver, userblock_size, swmr, rdcc_nslots, rdcc_nbytes, rdcc_w0, track_order, fs_strategy, fs_persist, fs_threshold, fs_page_size, page_buf_size, min_meta_keep, min_raw_keep, locking, alignment_threshold, alignment_interval, meta_block_size, **kwds)[0m
[1;32m    553[0m     fapl [38;5;241m=[39m make_fapl(driver, libver, rdcc_nslots, rdcc_nbytes, rdcc_w0,
[1;32m    554[0m                      locking, page_buf_size, min_meta_keep, min_raw_keep,
[1;32m    555[0m                      alignment_threshold[38;5;241m=[39malignment_threshold,
[1;32m    556[0m                      alignment_interval[38;5;241m=[39malignment_interval,
[1;32m    557[0m                      meta_block_size[38;5;241m=[39mmeta_block_size,
[1;32m    558[0m                      [38;5;241m*[39m[38;5;241m*[39mkwds)
[1;32m    559[0m     fcpl [38;5;241m=[39m make_fcpl(track_order[38;5;241m=[39mtrack_order, fs_strategy[38;5;241m=[39mfs_strategy,
[1;32m    560[0m                      fs_persist[38;5;241m=[39mfs_persist, fs_threshold[38;5;241m=[39mfs_threshold,
[1;32m    561[0m                      fs_page_size[38;5;241m=[39mfs_page_size)
[0;32m--> 562[0m     fid [38;5;241m=[39m [43mmake_fid[49m[43m([49m[43mname[49m[43m,[49m[43m [49m[43mmode[49m[43m,[49m[43m [49m[43muserblock_size[49m[43m,[49m[43m [49m[43mfapl[49m[43m,[49m[43m [49m[43mfcpl[49m[43m,[49m[43m [49m[43mswmr[49m[38;5;241;43m=[39;49m[43mswmr[49m[43m)[49m
[1;32m    564[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(libver, [38;5;28mtuple[39m):
[1;32m    565[0m     [38;5;28mself[39m[38;5;241m.[39m_libver [38;5;241m=[39m libver

File [0;32m~/miniconda3/envs/voxelwise_tutorials/lib/python3.10/site-packages/h5py/_hl/files.py:235[0m, in [0;36mmake_fid[0;34m(name, mode, userblock_size, fapl, fcpl, swmr)[0m
[1;32m    233[0m     [38;5;28;01mif[39;00m swmr [38;5;129;01mand[39;00m swmr_support:
[1;32m    234[0m         flags [38;5;241m|[39m[38;5;241m=[39m h5f[38;5;241m.[39mACC_SWMR_READ
[0;32m--> 235[0m     fid [38;5;241m=[39m [43mh5f[49m[38;5;241;43m.[39;49m[43mopen[49m[43m([49m[43mname[49m[43m,[49m[43m [49m[43mflags[49m[43m,[49m[43m [49m[43mfapl[49m[38;5;241;43m=[39;49m[43mfapl[49m[43m)[49m
[1;32m    236[0m [38;5;28;01melif[39;00m mode [38;5;241m==[39m [38;5;124m'[39m[38;5;124mr+[39m[38;5;124m'[39m:
[1;32m    237[0m     fid [38;5;241m=[39m h5f[38;5;241m.[39mopen(name, h5f[38;5;241m.[39mACC_RDWR, fapl[38;5;241m=[39mfapl)

File [0;32mh5py/_objects.pyx:54[0m, in [0;36mh5py._objects.with_phil.wrapper[0;34m()[0m

File [0;32mh5py/_objects.pyx:55[0m, in [0;36mh5py._objects.with_phil.wrapper[0;34m()[0m

File [0;32mh5py/h5f.pyx:102[0m, in [0;36mh5py.h5f.open[0;34m()[0m

[0;31mFileNotFoundError[0m: [Errno 2] Unable to synchronously open file (unable to open file: name = '/home/jlg/mvdoc/voxelwise_tutorials_data/vim-2/features/motion_energy.hdf', errno = 2, error message = 'No such file or directory', flags = 0, o_flags = 0)

